{"version":3,"sources":["utils/duration/index.js","pomodoro/Subtitle.js","pomodoro/ProgressBar.js","pomodoro/Title.js","pomodoro/Pomodoro.js","utils/class-names/index.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","Subtitle","session","className","data-testid","timeRemaining","ProgressBar","breakDuration","focusDuration","barPercentage","label","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","Title","nextTick","prevState","max","nextSession","currentSession","Pomodoro","classNameToBoolean","useState","isTimerRunning","setIsTimerRunning","setSession","setFocusDuration","setBreakDuration","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","type","onClick","duration","disabled","aria-label","title","nextState","prevStateSession","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a93598e.chunk.js","sourcesContent":["/**\r\n * Formats a number of minutes as 'mm:00'.\r\n *\r\n * For example,\r\n *    minutesToDuration(3) = '03:00'\r\n *    minutesToDuration(45) = '45:00'\r\n *\r\n * @param givenMinutes\r\n *    the number of minutes in the duration\r\n * @returns {string}\r\n *    the given minutes formatted as 'mm:00'\r\n */\r\n\r\nexport function minutesToDuration(givenMinutes) {\r\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\r\n  return `${minutes}:00`;\r\n}\r\n\r\n/**\r\n * Formats a number of seconds as 'mm:ss'.\r\n *\r\n * For example,\r\n *    secondsToDuration(305) = '05:05'\r\n *    secondsToDuration(930) = '15:30'\r\n *\r\n * @param givenSeconds\r\n *    the number of seconds in the duration\r\n * @returns {string}\r\n *    the given seconds formatted as 'mm:ss'\r\n */\r\n\r\nexport function secondsToDuration(givenSeconds) {\r\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n  const seconds = Math.round(givenSeconds % 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n  return `${minutes}:${seconds}`;\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Subtitle({ session, secondsToDuration }) {\r\n/* TODO: Update message below correctly format the time remaining in the current session */\r\n\r\nreturn (\r\n   <p className=\"lead\" data-testid=\"session-sub-title\">\r\n   {secondsToDuration(session?.timeRemaining)} remaining\r\n   </p>\r\n);\r\n}\r\n\r\nexport default Subtitle;\r\n","import React from \"react\";\r\n\r\nfunction ProgressBar({ session, breakDuration, focusDuration }) {\r\nconst barPercentage =\r\n   100 -\r\n   (session.timeRemaining /\r\n   ((`${session.label}` === \"Focusing\" ? focusDuration : breakDuration) *\r\n      60)) *\r\n   100;\r\nreturn (\r\n   <div className=\"row mb-2\">\r\n   <div className=\"col\">\r\n      <div className=\"progress\" style={{ height: \"20px\" }}>\r\n         <div\r\n         className=\"progress-bar\"\r\n         role=\"progressbar\"\r\n         aria-valuemin=\"0\"\r\n         aria-valuemax=\"100\"\r\n         aria-valuenow={barPercentage} // TODO: Increase aria-valuenow as elapsed time increases\r\n         style={{ width: `${barPercentage}%` }} // TODO: Increase width % as elapsed time increases\r\n         />\r\n      </div>\r\n   </div>\r\n   </div>\r\n);\r\n}\r\n\r\nexport default ProgressBar;","import React from \"react\";\r\nimport Subtitle from \"./Subtitle\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nfunction Title({\r\n  session,\r\n  minutesToDuration,\r\n  focusDuration,\r\n  secondsToDuration,\r\n  breakDuration,\r\n}) {\r\n  if (session) {\r\n    return (\r\n      <>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n            <h2 data-testid=\"session-title\">\r\n              {session.label} for{\" \"}\r\n              {minutesToDuration(\r\n                session.label === \"Focusing\" ? focusDuration : breakDuration\r\n              )}{\" \"}\r\n              minutes\r\n            </h2>\r\n            <Subtitle session={session} secondsToDuration={secondsToDuration} />\r\n          </div>\r\n        </div>\r\n        <ProgressBar\r\n          session={session}\r\n          focusDuration={focusDuration}\r\n          breakDuration={breakDuration}\r\n        />\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Title;","import React, { useState } from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\nimport useInterval from \"../utils/useInterval\";\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\nimport Title from \"./Title\";\r\n\r\n// These functions are defined outside of the component to insure they do not have access to state\r\n// and are, therefore more likely to be pure.\r\n\r\n/**\r\n * Update the session state with new state after each tick of the interval.\r\n * @param prevState\r\n *  the previous session state\r\n * @returns\r\n *  new session state with timing information updated.\r\n */\r\nfunction nextTick(prevState) {\r\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\r\n  return {\r\n    ...prevState,\r\n    timeRemaining,\r\n  };\r\n}\r\n\r\n/**\r\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\r\n * @param focusDuration\r\n *    the current focus duration\r\n * @param breakDuration\r\n *    the current break duration\r\n * @returns\r\n *  function to update the session state.\r\n */\r\nfunction nextSession(focusDuration, breakDuration) {\r\n  /**\r\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n   */\r\n  return (currentSession) => {\r\n    if (currentSession.label === \"Focusing\") {\r\n      return {\r\n        label: \"On Break\",\r\n        timeRemaining: breakDuration * 60,\r\n      };\r\n    }\r\n    return {\r\n      label: \"Focusing\",\r\n      timeRemaining: focusDuration * 60,\r\n    };\r\n  };\r\n}\r\n\r\nfunction Pomodoro() {\r\n  // Timer starts out paused\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  // The current session - null where there is no session running\r\n  const [session, setSession] = useState(null);\r\n\r\n  // ToDo: Allow the user to adjust the focus and break duration.\r\n  const [focusDuration, setFocusDuration] = useState(25);\r\n  const [breakDuration, setBreakDuration] = useState(5);\r\n  /**\r\n   * Custom hook that invokes the callback function every second\r\n   *\r\n   * NOTE: You will not need to make changes to the callback function\r\n   */\r\n  useInterval(\r\n    () => {\r\n      if (session.timeRemaining === 0) {\r\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\r\n        return setSession(nextSession(focusDuration, breakDuration));\r\n      }\r\n      return setSession(nextTick);\r\n    },\r\n    isTimerRunning ? 1000 : null\r\n  );\r\n\r\n  /**\r\n   * Called whenever the play/pause button is clicked.\r\n   */\r\n  function playPause() {\r\n    setIsTimerRunning((prevState) => {\r\n      const nextState = !prevState;\r\n      if (nextState) {\r\n        setSession((prevStateSession) => {\r\n          // If the timer is starting and the previous session is null,\r\n          // start a focusing session.\r\n          if (prevStateSession === null) {\r\n            return {\r\n              label: \"Focusing\",\r\n              timeRemaining: focusDuration * 60,\r\n            };\r\n          }\r\n          return prevStateSession;\r\n        });\r\n      }\r\n      return nextState;\r\n    });\r\n  }\r\n\r\n  function handleDecreaseFocus() {\r\n    if (focusDuration === 5) return;\r\n    setFocusDuration((duration) => duration - 5);\r\n  }\r\n  function handleIncreaseFocus() {\r\n    if (focusDuration === 60) return;\r\n    setFocusDuration((duration) => duration + 5);\r\n  }\r\n  function handleDecreaseBreak() {\r\n    if (breakDuration === 1) return;\r\n    setBreakDuration((duration) => duration - 1);\r\n  }\r\n  function handleIncreaseBreak() {\r\n    if (breakDuration === 15) return;\r\n    setBreakDuration((duration) => duration + 1);\r\n  }\r\n  function handleStop() {\r\n    setIsTimerRunning(false);\r\n    setSession(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pomodoro\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"input-group input-group-lg mb-2\">\r\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n              {/* TODO: Update this text to display the current focus session duration */}\r\n              Focus Duration: {minutesToDuration(focusDuration)}\r\n            </span>\r\n            <div className=\"input-group-append\">\r\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"decrease-focus\"\r\n                onClick={handleDecreaseFocus}\r\n                disabled={session}\r\n              >\r\n                <span className=\"oi oi-minus\" />\r\n              </button>\r\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"increase-focus\"\r\n                onClick={handleIncreaseFocus}\r\n                disabled={session}\r\n              >\r\n                <span className=\"oi oi-plus\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <div className=\"input-group input-group-lg mb-2\">\r\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n                {/* TODO: Update this text to display the current break session duration */}\r\n                Break Duration: {minutesToDuration(breakDuration)}\r\n              </span>\r\n              <div className=\"input-group-append\">\r\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"decrease-break\"\r\n                  onClick={handleDecreaseBreak}\r\n                  disabled={session}\r\n                >\r\n                  <span className=\"oi oi-minus\" />\r\n                </button>\r\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"increase-break\"\r\n                  onClick={handleIncreaseBreak}\r\n                  disabled={session}\r\n                >\r\n                  <span className=\"oi oi-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div\r\n            className=\"btn-group btn-group-lg mb-2\"\r\n            role=\"group\"\r\n            aria-label=\"Timer controls\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-testid=\"play-pause\"\r\n              title=\"Start or pause timer\"\r\n              onClick={playPause}\r\n            >\r\n              <span\r\n                className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-play\": !isTimerRunning,\r\n                  \"oi-media-pause\": isTimerRunning,\r\n                })}\r\n              />\r\n            </button>\r\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\r\n            {/* TODO: Disable the stop button when there is no active session */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"stop\"\r\n              title=\"Stop the session\"\r\n              disabled={!session}\r\n              onClick={handleStop}\r\n            >\r\n              <span className=\"oi oi-media-stop\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n\r\n        <Title\r\n          session={session}\r\n          minutesToDuration={minutesToDuration}\r\n          focusDuration={focusDuration}\r\n          breakDuration={breakDuration}\r\n          secondsToDuration={secondsToDuration}\r\n          nextSession={nextSession}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;","/**\r\n * Use this function to dynamically assign the className property of react components.\r\n *\r\n * Usage:\r\n *\r\n *  <span className={classNames({\r\n *               \"oi\": true,\r\n *               \"oi-media-play\": currentState.isPaused,\r\n *               'oi-media-pause': !currentState.isPaused\r\n *             })}/>\r\n *\r\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\r\n *\r\n * @param classNameToBoolean\r\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\r\n * @returns {string}\r\n *    a space delimited string of the class names which have a value of `true`.\r\n */\r\n export default function classNames(classNameToBoolean) {\r\n  return Object.entries(classNameToBoolean)\r\n    .reduce(\r\n      (classes, [className, value]) =>\r\n        classes.concat(value ? className : undefined),\r\n      []\r\n    )\r\n    .filter((className) => className !== undefined)\r\n    .join(\" \");\r\n}","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Pomodoro from \"./pomodoro/Pomodoro\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header container\">\r\n        <h1>Pomodoro Timer</h1>\r\n      </header>\r\n      <div className=\"container\">\r\n        <Pomodoro />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}